(function() {
    const scriptUrl = new URL(document.currentScript.src);
    const jsonUrl = new URL('../data/products.json', scriptUrl).href;
    const cyrillicToLatinMap = {
        'а': 'a',
        'б': 'b',
        'в': 'v',
        'г': 'g',
        'д': 'd',
        'е': 'e',
        'ё': 'yo',
        'ж': 'zh',
        'з': 'z',
        'и': 'i',
        'й': 'y',
        'к': 'k',
        'л': 'l',
        'м': 'm',
        'н': 'n',
        'о': 'o',
        'п': 'p',
        'р': 'r',
        'с': 's',
        'т': 't',
        'у': 'u',
        'ф': 'f',
        'х': 'h',
        'ц': 'ts',
        'ч': 'ch',
        'ш': 'sh',
        'щ': 'sch',
        'ъ': '',
        'ы': 'y',
        'ь': '',
        'э': 'e',
        'ю': 'yu',
        'я': 'ya'
    };

    function convertToLatin(text) {
        const lowercaseText = text.toLowerCase();
        let latinText = '';
        for (let i = 0; i < lowercaseText.length; i++) {
            const char = lowercaseText[i];
            const latinChar = cyrillicToLatinMap[char] || char;
            latinText += latinChar;
        }
        return latinText;
    }
    async function fetchData(url) {
        try {
            const response = await fetch(url);
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Ошибка при получении данных:', error);
        }
    }
    fetchData(jsonUrl).then(data => {
        const state = {
            checkedTypes: [], // Выбранные типы
            sortOrder: '', // Порядок сортировки (asc или desc)
        };
        const selectedLanguage = localStorage.getItem('selectedLanguage');
        // const types = [...new Set(data.map(obj => obj.type))];
        const types = [...new Set(data.map(obj => {
            if (selectedLanguage === 'kz') {
                return obj.typeKZ;
            } else {
                return obj.type;
            }
        }))];
        const filterDiv = document.querySelector('.cards__filter');
        if (!filterDiv) {
            console.error('Не удалось найти элемент .cards__filter');
            return;
        }
        // Определение функции handleFilterChange
        function handleFilterChange() {
            state.checkedTypes = Array.from(filterDiv.querySelectorAll('input[type="checkbox"]:checked')).map(input => input.value);
            filterAndSortCards();
        }
        filterDiv.innerHTML = '';

        function createFilterElement(type, handleFilterChange) {
            const label = document.createElement('label');
            const checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.value = type;
            checkbox.addEventListener('change', handleFilterChange);
            const span = document.createElement('span');
            span.classList.add('span__check')
            span.textContent = type;
            label.appendChild(checkbox);
            label.appendChild(span);
            return label;
        }
        types.forEach(type => {
            const filterElement = createFilterElement(type, handleFilterChange);
            filterDiv.appendChild(filterElement);
        });
        // Определение функции filterAndSortCards
        function filterAndSortCards() {
            const selectedLanguage = localStorage.getItem('selectedLanguage');
            let filteredData = data;
            if (state.checkedTypes.length > 0) {
                const key = selectedLanguage === 'kz' ? 'typeKZ' : 'type';
                filteredData = data.filter(obj => state.checkedTypes.includes(obj[key]));
            }
            const sortedData = state.sortOrder === 'asc' || state.sortOrder === 'desc' ? sortCardsByPrice(filteredData) : filteredData;
            const cards = sortedData.map(obj => createCard(obj, selectedLanguage));
            renderCards(cards);
        }
        const cardsDiv = document.querySelector('.cards');
        cardsDiv.innerHTML = '';
        function createDivWithClass(className) {
            const div = document.createElement('div');
            div.classList.add(className);
            return div;
        }
        
        function createElemWithClass(tagName, className) {
            const elem = document.createElement(tagName);
            elem.classList.add(className);
            return elem;
        }
        
        function createImgWithClass(className) {
            const img = document.createElement('img');
            img.classList.add(className);
            return img;
        }
        function createCardPic(src, name) {
            const cardPicDiv = createDivWithClass('card__pic');
        
            const img = createImgWithClass('img');
            img.src = src;
            img.alt = convertToLatin(name);
        
            cardPicDiv.appendChild(img);
            return cardPicDiv;
        }
        
        function createCardTitle(selectedLanguage, name, nameKZ) {
            const titleP = createElemWithClass('p', 'card__title');
            titleP.textContent = selectedLanguage === 'kz' ? nameKZ : name;
            return titleP;
        }
        
        function createCardDescription(selectedLanguage, description, descriptionKZ) {
            const descriptionP = createElemWithClass('p', 'card__description');
            descriptionP.textContent = selectedLanguage === 'kz' ? descriptionKZ : description;
            return descriptionP;
        }
        
        function createCardFooter(selectedLanguage, price) {
            const footerDiv = createDivWithClass('card__footer');
        
            const priceP = createElemWithClass('p', 'card__price');
            priceP.textContent = selectedLanguage === 'kz' ? 'Бағасы: ' : 'Цена: ';
        
            const costP = createElemWithClass('p', 'card__cost');
            costP.textContent = `${price}тг.`;
        
            footerDiv.appendChild(priceP);
            footerDiv.appendChild(costP);
            return footerDiv;
        }
        /*модальное окно*/
        function createModal() {
            const sectionElement = document.createElement('section');
            sectionElement.classList.add('modal');
        
            const modalWrapperDiv = document.createElement('div');
            modalWrapperDiv.classList.add('modal__wrapper');
        
            const modalPicDiv = createDivWithClass('modal__pic');
            const img = createImgWithClass('img');
            modalPicDiv.appendChild(img);
        
            const modalContentDiv = createDivWithClass('modal__content');
        
            const modalTextDiv = createDivWithClass('modal__text');
            const modalTitleH3 = createElemWithClass('h3', 'modal__title');
            const modalDescriptionP = createElemWithClass('p', 'modal__description');
            modalTextDiv.appendChild(modalTitleH3);
            modalTextDiv.appendChild(modalDescriptionP);
        
            const modalFooterDiv = createDivWithClass('modal__footer');
            const modalPriceP = createElemWithClass('p', 'modal__price');
            const modalCostP = createElemWithClass('p', 'modal__cost');
            modalFooterDiv.appendChild(modalPriceP);
            modalFooterDiv.appendChild(modalCostP);
        
            const modalCloseBtn = createDivWithClass('modal-close-btn');
        
            modalContentDiv.appendChild(modalTextDiv);
            modalContentDiv.appendChild(modalFooterDiv);
            modalContentDiv.appendChild(modalCloseBtn);
        
            modalWrapperDiv.appendChild(modalPicDiv);
            modalWrapperDiv.appendChild(modalContentDiv);
        
            sectionElement.appendChild(modalWrapperDiv);
        
            return sectionElement;
        }
        
        
        const main = document.querySelector('.main');
        main.append(createModal());

        /* функция создания карточки продукта */
        function createCard(obj, selectedLanguage) {
            const {
                src,
                name,
                description,
                nameKZ,
                descriptionKZ,
                price
            } = obj;
        
            const cardDiv = createDivWithClass('card');
        
            const cardPicDiv = createCardPic(src, name);
            const titleP = createCardTitle(selectedLanguage, name, nameKZ);
            const descriptionP = createCardDescription(selectedLanguage, description, descriptionKZ);
            const footerDiv = createCardFooter(selectedLanguage, price);
        
            cardDiv.appendChild(cardPicDiv);
            cardDiv.appendChild(titleP);
            cardDiv.appendChild(descriptionP);
            cardDiv.appendChild(footerDiv);
        
            cardDiv.addEventListener('click', (event) => {
                handleCardClick(event, selectedLanguage, src, name, nameKZ, description, descriptionKZ, price);
            });
        
            return cardDiv;
        }
        
        
        
        function handleCardClick(event, selectedLanguage, src, name, nameKZ, description, descriptionKZ, price) {
            const body = document.querySelector('body');
            body.style.overflow = 'hidden';
        
            const modal = document.querySelector('.modal');
            const modalTitle = document.querySelector('.modal__title');
            const modalDescription = document.querySelector('.modal__description');
            const modalPriceP = document.querySelector('.modal__price');
            const modalCost = document.querySelector('.modal__cost');
            const modalPic = document.querySelector('.modal__pic img');
        
            modalTitle.textContent = selectedLanguage === 'kz' ? nameKZ : name;
            modalDescription.textContent = selectedLanguage === 'kz' ? descriptionKZ : description;
            modalPriceP.textContent = selectedLanguage === 'kz' ? 'Бағасы' : 'Цена';
            modalCost.textContent = `${price}тг.`;
            modalPic.src = src;
            modalPic.alt = convertToLatin(name);
        
            modal.classList.add('modal-open');
            modal.style.opacity = 1;
        
            const closeBtn = document.querySelector('.modal-close-btn');
            closeBtn.textContent = selectedLanguage === 'kz' ? 'ЖАБЫҚ' : 'ЗАКРЫТЬ';
        
            const closeModal = (event) => {
                const target = event.target;
        
                if (target === modal || target === closeBtn) {
                    modal.style.opacity = 0;
                    setTimeout(() => {
                        modal.classList.remove('modal-open');
                    }, 300)
                    body.style.overflow = '';
                    modal.removeEventListener('click', closeModal);
                }
            }
        
            modal.addEventListener('click', closeModal);
        }

        function renderCards(cards) {
            cardsDiv.innerHTML = '';
            cards.forEach(card => cardsDiv.appendChild(card));
        };

        function sortCardsByPrice(cards) {
            const sortedCards = [...cards];
            sortedCards.sort((a, b) => {
                const priceA = a.price;
                const priceB = b.price;
                return state.sortOrder === 'asc' ? priceA - priceB : priceB - priceA;
            });
            return sortedCards;
        };
        const sortByPrice = document.querySelector('.sort__price select');
        const sortByPriceOptions = sortByPrice.options;
        sortByPrice.addEventListener('change', () => {
            state.sortOrder = sortByPrice.value;
            filterAndSortCards();
        });

        function updateSort(options, selectedLanguage) {
            if (selectedLanguage === 'ru') {
                options[0].textContent = 'Сортировка по цене: ';
                options[1].textContent = 'сначала дешевле';
                options[2].textContent = 'сначала дороже';
            }
            if (selectedLanguage === 'kz') {
                options[0].textContent = 'бағасы бойынша сұрыптау';
                options[1].textContent = 'алдымен арзанырақ';
                options[2].textContent = 'басында қымбатырақ';
            }
        }
        updateSort(sortByPriceOptions, selectedLanguage)
        const cards = data.map(obj => createCard(obj, selectedLanguage));
        renderCards(cards);

        function updateTypes(selectedLanguage, filterDiv) {
            const types = [...new Set(data.map(obj => selectedLanguage === 'kz' ? obj.typeKZ : obj.type))];
            // Очистка фильтров, но не их пересоздание
            // Удаляем обработчики событий с существующих фильтров
            const existingFilters = filterDiv.querySelectorAll('.filter');
            existingFilters.forEach(filterElement => {
                filterElement.removeEventListener('change', handleFilterChange);
            });
            filterDiv.innerHTML = '';
        
            types.forEach(type => {
                // Проверяем, существует ли уже фильтр с таким типом
                const existingFilter = filterDiv.querySelector(`.filter[data-type="${type}"]`);
                if (existingFilter) {
                    // Если существует, то обновляем его текст в соответствии с выбранным языком
                    const text = selectedLanguage === 'kz' ? getTypeNameByKZ(type) : type;
                    existingFilter.textContent = text;
                } else {
                    // Если не существует, то создаем новый фильтр
                    const filterElement = createFilterElement(type, handleFilterChange);
                    filterDiv.appendChild(filterElement);
                }
            });
        
            // Перефильтровка и сортировка карточек
            filterAndSortCards();
        }
        function updateCards(selectedLanguage) {
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                const nameElement = card.querySelector('.card__title');
                const descriptionElement = card.querySelector('.card__description');
                const priceElement = card.querySelector('.card__price');
                const costElement = card.querySelector('.card__cost');
        
                const dataIndex = card.dataset.index;
                const product = data[dataIndex];
                nameElement.textContent = selectedLanguage === 'kz' ? product.nameKZ : product.name;
                descriptionElement.textContent = selectedLanguage === 'kz' ? product.descriptionKZ : product.description;
                priceElement.textContent = selectedLanguage === 'kz' ? 'Бағасы: ' : 'Цена: ';
                costElement.textContent = `${product.price}тг.`;
            });
        
            // Перефильтровка и сортировка карточек
            filterAndSortCards();
        }
        window.addEventListener('languageChanged', function(event) {
            const selectedLanguage = event.detail; // Получите выбранный язык из деталей события
            updateSort(sortByPriceOptions, selectedLanguage)
            updateTypes(selectedLanguage, filterDiv);
            updateCards(selectedLanguage);
            renderCards(cards);
        });
    }).catch(error => {
        console.error('Ошибка при загрузке файла products.json:', error);
    });
}());